substitutions:
  devicename: vp-smartmeter 
  friendly_name: VP_SmartMeter
  wifi: !secret wifi_ssid
  password: !secret wifi_password
  ip: <ip_of_device>
  gateway: <ip_of_gateway>
  subnet: <subnet>
  ap_wifi: <"Fallback_Hotspot_name">
  ap_wifi_password: <"Hotspot_passw">
  influx_url: <http://influxdb:port>
  influx_organization: <Organization>
  influx_token: <Token>
  influx_bucket: <Bucket>
  influx_measurement: <_measurement>

esphome:
  name: ${devicename}
  friendly_name: ${friendly_name}
  on_boot:
    - priority: 800
      then:
        - light.turn_on:
            id: status_led
            red: 100%
            green: 100%
            blue: 0%
esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:
  level: DEBUG
  logs:
    text_sensor: INFO # Otherwise sensor spams logging

# Enable webserver
web_server:
  local: true

# Enable OTA updates via web interface
ota:
  - platform: web_server

wifi:
  ssid: ${wifi}
  password: ${password}
  power_save_mode: none
  manual_ip:
    static_ip: ${ip}
    gateway: ${gateway}
    subnet: ${subnet}

  # Show status of wifi connection
  on_connect:
    then:
      - light.turn_on:
          id: status_led
          red: 0%
          green: 100%
          blue: 0%
  on_disconnect:
    then:
      - light.turn_on:
          id: status_led
          red: 100%
          green: 0%
          blue: 0%

  # Optional: Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${ap_wifi}
    password: ${ap_wifi_password}

captive_portal:


# Setup esp32_rmt_led_strip for ESP-IDF
light:
  - platform: esp32_rmt_led_strip
    chipset: WS2812
    rgb_order: GRB
    pin: GPIO4
    num_leds: 1
    name: "Status LED"
    id: status_led
    internal: true # Makes led internal so that it wont show up in webGUI

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Stockholm
    servers:
     - ${gateway}

text_sensor:
  - platform: template
    name: "Current Time"
    id: current_time
    update_interval: 1s
    lambda: |-
      return id(sntp_time).now().strftime("%Y-%m-%d %H:%M:%S");

# Set pins required for LilyGo T-CAN485 board
output:
  - platform: gpio
    id: ENABLE_PIN # Enable the chip
    pin:
      number: GPIO19
      inverted: true
  - platform: gpio
    id: SE_PIN # Enable autodirection
    pin:
      number: GPIO17
      inverted: true
  - platform: gpio
    id: ENABLE_5V_PIN # Enable 5V pin for RS485 chip
    pin:
      number: GPIO16
      inverted: true

# UART-config for RS485
uart:
  id: modbus_uart
  tx_pin: GPIO22     # LilyGO TX-pin
  rx_pin: GPIO21     # LilyGO RX-pin
  baud_rate: 9600
  parity: NONE
  stop_bits: 1

#___________Modbus settings_____________
modbus:
  id: modbus1
  uart_id: modbus_uart

# Define Modbus Controller for KLEFR
modbus_controller:
  - id: klefr
    address: 1                  # Slave ID
    modbus_id: modbus1
    update_interval: 10s

# Sensorer for reading registers
sensor:
  # Total active power (kW)
  - platform: modbus_controller
    name: "Total Active Power"
    id: TotActPow
    address: 0x5012
    unit_of_measurement: "kW"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 3

  # L1 Voltage (V)
  - platform: modbus_controller
    name: "L1 Voltage"
    id: voltageL1
    address: 0x5002
    unit_of_measurement: "V"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 1

  # L2 Voltage (V)
  - platform: modbus_controller
    name: "L2 Voltage"
    id: voltageL2
    address: 0x5004
    unit_of_measurement: "V"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 1

  # L3 Voltage (V)
  - platform: modbus_controller
    name: "L3 Voltage"
    id: voltageL3
    address: 0x5006
    unit_of_measurement: "V"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 1

  # L1 Current (A)
  - platform: modbus_controller
    name: "L1 Current"
    id: currentL1
    address: 0x500C
    unit_of_measurement: "A"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L2 Current (A)
  - platform: modbus_controller
    name: "L2 Current"
    id: currentL2
    address: 0x500E
    unit_of_measurement: "A"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L3 Current (A)
  - platform: modbus_controller
    name: "L3 Current"
    id: currentL3
    address: 0x5010
    unit_of_measurement: "A"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L1 Power (kW)
  - platform: modbus_controller
    name: "L1 Active Power"
    id: powL1
    address: 0x5014
    unit_of_measurement: "kW"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L2 Power (kW)
  - platform: modbus_controller
    name: "L2 Active Power"
    id: powL2
    address: 0x5016
    unit_of_measurement: "kW"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L3 Power (kW)
  - platform: modbus_controller
    name: "L3 Active Power"
    id: powL3
    address: 0x5018
    unit_of_measurement: "kW"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L1 Total Energy (kWh)
  - platform: modbus_controller
    name: "L1 Total Energy"
    id: TotEnergyL1
    address: 0x6006
    unit_of_measurement: "kWh"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L2 Total Energy (kWh)
  - platform: modbus_controller
    name: "L2 Total Energy"
    id: TotEnergyL2
    address: 0x6008
    unit_of_measurement: "kWh"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # L3 Total Energy (kWh)
  - platform: modbus_controller
    name: "L3 Total Energy"
    id: TotEnergyL3
    address: 0x600A
    unit_of_measurement: "kWh"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  # Frequency (Hz)
  - platform: modbus_controller
    name: "Grid Frequency"
    id: freq
    address: 0x5008
    unit_of_measurement: "Hz"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 3

  # Total Energy Consumption (kWh)
  - platform: modbus_controller
    id: TotEnergy
    name: "Total Energy"
    address: 0x6000
    unit_of_measurement: "kWh"
    register_type: holding
    value_type: FP32
    register_count: 2
    modbus_controller_id: klefr
    accuracy_decimals: 2

  - id: _wifi_rssi
    platform: wifi_signal
    name: WiFi Signal

#___________Influx section_____________
external_components:
  - source: github://kpfleming/esphome-influxdb_v2_oss

http_request:
  useragent: esphome/influxdb
  timeout: 15s
  watchdog_timeout: 15s

influxdb_v2_oss:
  url: ${influx_url}
  organization: ${influx_organization}
  token: ${influx_token}
  backlog_max_depth: 60
  backlog_drain_batch: 10
  measurements:
    - id: _device_measurements
      bucket: ${influx_bucket}
      name: ${influx_measurement}
      sensors:
        - sensor_id: TotActPow
        - sensor_id: voltageL1
        - sensor_id: voltageL2
        - sensor_id: voltageL3
        - sensor_id: currentL1
        - sensor_id: currentL2
        - sensor_id: currentL3
        - sensor_id: TotEnergyL1
        - sensor_id: TotEnergyL2
        - sensor_id: TotEnergyL3
        - sensor_id: freq
        - sensor_id: TotEnergy
        - sensor_id: _wifi_rssi
          name: rssi

interval:
  - interval: 30s
    then:
      - influxdb.publish_batch:
          - _device_measurements
